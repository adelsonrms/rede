Atualizar/Acresentar as seguintes função abaixo :

##########################################################################################################################
- Modificar : cBL_Unear.LocalizarCampanha()
##########################################################################################################################

'---------------------------------------------------------------------------------------
' PROCEDIMENTO     : cBL_Unear.LocalizarCampanha()
' TIPO             : Function
' DATA/HORA        : 08/08/2017 11:16
' CONSULTOR        : TECNUN - Adelson Rosendo Marques da Silva (adelson@tecnun.com.br)
' DESCRIÇÃO        : Localiza uma campanha na lista atraves de um códigto. Retorna um objeto HTML DataCell
'---------------------------------------------------------------------------------------
'
' + Historico de Revisão
' **************************************************************************************
'   Versão    Data/Hora           Autor           Descriçao
'---------------------------------------------------------------------------------------
' * 1.00      08/08/2017 11:16
'---------------------------------------------------------------------------------------
Function LocalizarCampanha(codigo As String) As Object
    Dim campanha As Object
    'Tratamento de Erro
    '---------------------------------------------------------------------------------------
1   On Error GoTo LocalizarCampanha_Error
    Dim lngErrorNumber As Long, strErrorMessagem As String:
    Const cstr_ProcedureName As String = "cBL_Unear.LocalizarCampanha()"
    '---------------------------------------------------------------------------------------
    Dim Tabela As Object
    Dim i As Integer, y As Integer

2   Set Tabela = IEApp.Control("bsDataTable")
3   For i = 0 To Tabela.tBodies.item(0).Rows.Length - 1
4       For y = 0 To Tabela.tBodies.item(0).Rows(i).Cells.Length - 1
            If codigo = "0" Then
                Set campanha = Tabela.tBodies.item(0).Rows(i).Cells(y)
                GoTo Finaliza
            Else
5           If Tabela.tBodies.item(0).Rows(i).Cells(y).innertext = codigo Then
6               Set campanha = Tabela.tBodies.item(0).Rows(i).Cells(y)
7           End If
            End If
8       Next y
9   Next i

Finaliza:
10  Set LocalizarCampanha = campanha

Fim:
11  On Error GoTo 0
12  Exit Function

LocalizarCampanha_Error:
13  If Err <> 0 Then
14      lngErrorNumber = VBA.Err.Number: strErrorMessagem = VBA.Err.Description
15      Call VBA.Err.Raise(VBA.Err.Number, cstr_ProcedureName, VBA.vbNewLine & cstr_ProcedureName & " Em" & VBA.IIf(VBA.Erl() <> 0, " > Linha (" & VBA.Erl() & ")", "") & " > " & VBA.Err.Description)
16  End If
    GoTo Fim:
    'Debug Mode
17  Resume
End Function



##########################################################################################################################
- Acresentar
##########################################################################################################################
'---------------------------------------------------------------------------------------
' PROCEDIMENTO     : cBL_Unear.DownloadArquivosDeCampanhas()
' TIPO             : Function
' DATA/HORA        : 07/09/2018 19:00
' CONSULTOR        : TECNUN - Adelson Rosendo Marques da Silva (adelson@tecnun.com.br)
' DESCRIÇÃO        : Acessa e direciona para download dos arquivos
'---------------------------------------------------------------------------------------
Function DownloadArquivosDeCampanhas(strCampanhaSelecionada As String)
    'Tratamento de Erro
    '---------------------------------------------------------------------------------------
1   On Error GoTo BaixarArquivosRetorno_Error
    Dim lngErrorNumber As Long, strErrorMessagem As String:
    Const cstr_ProcedureName As String = "cBL_Unear.DownloadArquivosDeCampanhas()"
    '---------------------------------------------------------------------------------------
    
    Dim Tabela As Object
    Dim i As Integer, y As Integer
    Dim campanha As Object
    Dim strCampanha As String
    Dim strLinkDownload As String
    Dim qtdRegistro As String
    Dim strDataSolic As String
    
    vRetorno = Array(-1, "Nada executado")
    
    'Se tiver na tela de campanhas,
    If cUnear.CRM_TelaIndex = 2 Then
        Call ProcessarAcaoMenuCampanha("downloadResponse", strCampanha)
    Else
        'Se ja tive o ID campaignDownloadList, indica que a tela de download ja esta ativa
        If IEApp.ControlExists("campaignDownloadList") Then
            Debug.Print "Tela de Download ja ativa"
        End If
    End If
    
    'Aguarda pelo ID, que esta na pagina de downloads
    IEApp.WaitFor "campaignDownloadList", STOP_WHEN_FIND_ID
    
    Call AguardaCarregamentoTabela
    
    'Garante q a tabela exista
    Call CriarTabelaDownloadLog
    
    'Efetua a leitura da tabela linha a linha do que esta disponivel
    Set Tabela = IEApp.Control("bsDataTable")
     'Cada Linha
    For i = 0 To Tabela.tBodies.item(0).Rows.Length - 1
        If Tabela.tBodies.item(0).Rows(i).Cells(2).innertext = "Retorno" Then
            strDataSolic = Tabela.tBodies.item(0).Rows(i).Cells(0).innertext
            strCampanha = Tabela.tBodies.item(0).Rows(i).Cells(3).innertext
            
            If strCampanha = strCampanhaSelecionada Then
            
                If Tabela.tBodies.item(0).Rows(i).Cells(4).Children.Length > 0 Then
                    strLinkDownload = Tabela.tBodies.item(0).Rows(i).Cells(4).Children(0).href
                Else
                    strLinkDownload = "#Arquivo Nao disponivel para download ainda"
                End If
                qtdRegistro = Tabela.tBodies.item(0).Rows(i).Cells(6).innertext
                Debug.Print "Solicitando o download de : Campanha : " & strCampanha & " : Arquivo > " & strLinkDownload
                'Efetua o downloa e salva na tabela de log de downloads
                Call BaixarArquivoDeRetorno(strCampanha, strDataSolic, strLinkDownload, qtdRegistro)
            
            End If
            
        End If
    Next i

   DownloadArquivosDeCampanhas = vRetorno

Fim:
   On Error GoTo 0
10  Exit Function

BaixarArquivosRetorno_Error:
11  If VBA.Err <> 0 Then
12      lngErrorNumber = VBA.Err.Number: strErrorMessagem = VBA.Err.Description
13      Call VBA.Err.Raise(VBA.Err.Number, cstr_ProcedureName, VBA.vbNewLine & cstr_ProcedureName & " Em" & VBA.IIf(VBA.Erl() <> 0, " > Linha (" & VBA.Erl() & ")", "") & " > " & VBA.Err.Description)
14  End If
    GoTo Fim:
    'Debug Mode
15  Resume
End Function

'---------------------------------------------------------------------------------------
' PROCEDIMENTO     : cBL_Unear.BaixarArquivoDeRetorno()
' TIPO             : Function
' DATA/HORA        : 07/09/2018 19:00
' CONSULTOR        : TECNUN - Adelson Rosendo Marques da Silva (adelson@tecnun.com.br)
' DESCRIÇÃO        : Efetua o download da campanha e salva no diretorio
'---------------------------------------------------------------------------------------
Sub BaixarArquivoDeRetorno(campanha, dataSolicitacao, linkDownload As String, qtdRegistros As String)
    'Tratamento de Erro
    '---------------------------------------------------------------------------------------
1   On Error GoTo BaixarArquivoDeRetorno_Error
    Dim lngErrorNumber As Long, strErrorMessagem As String:
    Const cstr_ProcedureName As String = "cBL_Unear.BaixarArquivosRetorno()"
    '---------------------------------------------------------------------------------------
    
    Dim strPastaDownload As String
    Dim strNomeArquivo As String
    Dim strArquivoDestino As String
    Dim status As String
    
    strNomeArquivo = "Retorno Campanha - " & campanha & ".csv"
    strPastaDownload = PegaEndereco_Relatorios()
    strArquivoDestino = strPastaDownload & "\" & strNomeArquivo
    
    Dim ie As New cTFW_WebUtil
    
    Call ie.Download(linkDownload, API, strArquivoDestino, True)
    
    If VBA.Dir(strArquivoDestino) <> "" Then
        status = "Arquivo Baixado com sucesso"
    Else
        status = "Erro durante o download"
    End If
    
    With CurrentDb.OpenRecordset("SELECT * FROM tblHistoricoDownload WHERE IDCampanha = " & campanha)
        If .EOF Then .addNew Else .edit
        .Fields("IDCampanha").value = CLng(campanha)
        .Fields("OrigemDownload").value = linkDownload
        .Fields("DestinoDownload").value = strArquivoDestino
        .Fields("DataSolicitacao").value = VBA.CDate(dataSolicitacao)
        .Fields("QtdRegistros").value = qtdRegistros
        .Fields("status").value = status
        .Fields("DataDownload").value = VBA.Now()
        .Update
    End With
    
Fim:
   On Error GoTo 0
10  Exit Sub

BaixarArquivoDeRetorno_Error:
11  If VBA.Err <> 0 Then
12      lngErrorNumber = VBA.Err.Number: strErrorMessagem = VBA.Err.Description
13      Call VBA.Err.Raise(VBA.Err.Number, cstr_ProcedureName, VBA.vbNewLine & cstr_ProcedureName & " Em" & VBA.IIf(VBA.Erl() <> 0, " > Linha (" & VBA.Erl() & ")", "") & " > " & VBA.Err.Description)
14  End If
    GoTo Fim:
    'Debug Mode
15  Resume
End Sub

'Cria a tabela de downloads, caso nao exista
Public Sub CriarTabelaDownloadLog()
    Dim tb As Object, pSQLCreate As String
10  On Error Resume Next
20  Set tb = CurrentDb.TableDefs("tblHistoricoDownload")

30  If tb Is Nothing Then
40      pSQLCreate = "CREATE TABLE tblHistoricoDownload ( "
50      pSQLCreate = pSQLCreate & VBA.vbNewLine & "      IDCampanha LONG"
60      pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,OrigemDownload TEXT"
70      pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,DestinoDownload TEXT"
80      pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,DataSolicitacao DateTime"
90      pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,QtdRegistros INT"
100     pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,status TEXT"
110     pSQLCreate = pSQLCreate & VBA.vbNewLine & "     ,DataDownload DateTime"
190     pSQLCreate = pSQLCreate & VBA.vbNewLine & ")"

210     Call CurrentDb.Execute(pSQLCreate)
220 End If
End Sub
####################################################################################################################################
